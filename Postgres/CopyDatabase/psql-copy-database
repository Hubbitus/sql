#!/bin/bash

set -o pipefail
set -e

. $(dirname $0)/.config
. $(dirname $0)/_pg_size

: ${FROM_DB_USER?"You must define FROM_DB_USER to continue"}
: ${FROM_DB_NAME?"You must define FROM_DB_NAME to continue"}
: ${TO_DB_USER?"You must define TO_DB_USER to continue"}
: ${TO_DB_NAME?"You must define TO_DB_NAME to continue"}

. $(dirname $0)/_shared

run FROM time pg_dump ${FROM_DB_HOST:+-h $FROM_DB_HOST} -p $FROM_DB_PORT -U $FROM_DB_USER --clean --if-exists --format=plain --compress=0 $FROM_EXTRA_OPTIONS $FROM_DB_NAME \
	| pv --progress -terabW --size $SIZE \
	| grep -Pv "^(DROP DATABASE( IF EXISTS)? $FROM_DB_NAME;|(DROP|CREATE) SCHEMA( IF EXISTS)? public;|SET default_tablespace)" \
	| run TO psql ${TO_DB_HOST:+-h $TO_DB_HOST} -p $TO_DB_PORT -U $TO_DB_USER -nxq -v ON_ERROR_STOP=on --dbname $TO_DB_NAME

# Also reindex, vacuum and analyze new database:
echo 'Transfer complete. Start reindex:'
run TO time reindexdb --quiet ${TO_DB_HOST:+-h $TO_DB_HOST} -U $TO_DB_USER -p $TO_DB_PORT $TO_DB_NAME
echo 'Start vacuum:'
run TO time vacuumdb ${TO_DB_HOST:+-h $TO_DB_HOST} -U $TO_DB_USER -p $TO_DB_PORT $TO_DB_NAME --analyze --freeze
